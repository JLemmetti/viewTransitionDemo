/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ViewTransitionsInReactImport } from './routes/ViewTransitionsInReact'
import { Route as ViewTransitions2Import } from './routes/ViewTransitions2'
import { Route as ViewTransitionsImport } from './routes/ViewTransitions'
import { Route as ThankYouImport } from './routes/ThankYou'
import { Route as TechStackImport } from './routes/TechStack'
import { Route as StartImport } from './routes/Start'
import { Route as HurdlesImport } from './routes/Hurdles'
import { Route as IndexImport } from './routes/index'
import { Route as DemosIndexImport } from './routes/Demos/index'
import { Route as Demos3Import } from './routes/Demos/3'
import { Route as Demos2Import } from './routes/Demos/2'
import { Route as Demos1Import } from './routes/Demos/1'

// Create/Update Routes

const ViewTransitionsInReactRoute = ViewTransitionsInReactImport.update({
  id: '/ViewTransitionsInReact',
  path: '/ViewTransitionsInReact',
  getParentRoute: () => rootRoute,
} as any)

const ViewTransitions2Route = ViewTransitions2Import.update({
  id: '/ViewTransitions2',
  path: '/ViewTransitions2',
  getParentRoute: () => rootRoute,
} as any)

const ViewTransitionsRoute = ViewTransitionsImport.update({
  id: '/ViewTransitions',
  path: '/ViewTransitions',
  getParentRoute: () => rootRoute,
} as any)

const ThankYouRoute = ThankYouImport.update({
  id: '/ThankYou',
  path: '/ThankYou',
  getParentRoute: () => rootRoute,
} as any)

const TechStackRoute = TechStackImport.update({
  id: '/TechStack',
  path: '/TechStack',
  getParentRoute: () => rootRoute,
} as any)

const StartRoute = StartImport.update({
  id: '/Start',
  path: '/Start',
  getParentRoute: () => rootRoute,
} as any)

const HurdlesRoute = HurdlesImport.update({
  id: '/Hurdles',
  path: '/Hurdles',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const DemosIndexRoute = DemosIndexImport.update({
  id: '/Demos/',
  path: '/Demos/',
  getParentRoute: () => rootRoute,
} as any)

const Demos3Route = Demos3Import.update({
  id: '/Demos/3',
  path: '/Demos/3',
  getParentRoute: () => rootRoute,
} as any)

const Demos2Route = Demos2Import.update({
  id: '/Demos/2',
  path: '/Demos/2',
  getParentRoute: () => rootRoute,
} as any)

const Demos1Route = Demos1Import.update({
  id: '/Demos/1',
  path: '/Demos/1',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/Hurdles': {
      id: '/Hurdles'
      path: '/Hurdles'
      fullPath: '/Hurdles'
      preLoaderRoute: typeof HurdlesImport
      parentRoute: typeof rootRoute
    }
    '/Start': {
      id: '/Start'
      path: '/Start'
      fullPath: '/Start'
      preLoaderRoute: typeof StartImport
      parentRoute: typeof rootRoute
    }
    '/TechStack': {
      id: '/TechStack'
      path: '/TechStack'
      fullPath: '/TechStack'
      preLoaderRoute: typeof TechStackImport
      parentRoute: typeof rootRoute
    }
    '/ThankYou': {
      id: '/ThankYou'
      path: '/ThankYou'
      fullPath: '/ThankYou'
      preLoaderRoute: typeof ThankYouImport
      parentRoute: typeof rootRoute
    }
    '/ViewTransitions': {
      id: '/ViewTransitions'
      path: '/ViewTransitions'
      fullPath: '/ViewTransitions'
      preLoaderRoute: typeof ViewTransitionsImport
      parentRoute: typeof rootRoute
    }
    '/ViewTransitions2': {
      id: '/ViewTransitions2'
      path: '/ViewTransitions2'
      fullPath: '/ViewTransitions2'
      preLoaderRoute: typeof ViewTransitions2Import
      parentRoute: typeof rootRoute
    }
    '/ViewTransitionsInReact': {
      id: '/ViewTransitionsInReact'
      path: '/ViewTransitionsInReact'
      fullPath: '/ViewTransitionsInReact'
      preLoaderRoute: typeof ViewTransitionsInReactImport
      parentRoute: typeof rootRoute
    }
    '/Demos/1': {
      id: '/Demos/1'
      path: '/Demos/1'
      fullPath: '/Demos/1'
      preLoaderRoute: typeof Demos1Import
      parentRoute: typeof rootRoute
    }
    '/Demos/2': {
      id: '/Demos/2'
      path: '/Demos/2'
      fullPath: '/Demos/2'
      preLoaderRoute: typeof Demos2Import
      parentRoute: typeof rootRoute
    }
    '/Demos/3': {
      id: '/Demos/3'
      path: '/Demos/3'
      fullPath: '/Demos/3'
      preLoaderRoute: typeof Demos3Import
      parentRoute: typeof rootRoute
    }
    '/Demos/': {
      id: '/Demos/'
      path: '/Demos'
      fullPath: '/Demos'
      preLoaderRoute: typeof DemosIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/Hurdles': typeof HurdlesRoute
  '/Start': typeof StartRoute
  '/TechStack': typeof TechStackRoute
  '/ThankYou': typeof ThankYouRoute
  '/ViewTransitions': typeof ViewTransitionsRoute
  '/ViewTransitions2': typeof ViewTransitions2Route
  '/ViewTransitionsInReact': typeof ViewTransitionsInReactRoute
  '/Demos/1': typeof Demos1Route
  '/Demos/2': typeof Demos2Route
  '/Demos/3': typeof Demos3Route
  '/Demos': typeof DemosIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/Hurdles': typeof HurdlesRoute
  '/Start': typeof StartRoute
  '/TechStack': typeof TechStackRoute
  '/ThankYou': typeof ThankYouRoute
  '/ViewTransitions': typeof ViewTransitionsRoute
  '/ViewTransitions2': typeof ViewTransitions2Route
  '/ViewTransitionsInReact': typeof ViewTransitionsInReactRoute
  '/Demos/1': typeof Demos1Route
  '/Demos/2': typeof Demos2Route
  '/Demos/3': typeof Demos3Route
  '/Demos': typeof DemosIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/Hurdles': typeof HurdlesRoute
  '/Start': typeof StartRoute
  '/TechStack': typeof TechStackRoute
  '/ThankYou': typeof ThankYouRoute
  '/ViewTransitions': typeof ViewTransitionsRoute
  '/ViewTransitions2': typeof ViewTransitions2Route
  '/ViewTransitionsInReact': typeof ViewTransitionsInReactRoute
  '/Demos/1': typeof Demos1Route
  '/Demos/2': typeof Demos2Route
  '/Demos/3': typeof Demos3Route
  '/Demos/': typeof DemosIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/Hurdles'
    | '/Start'
    | '/TechStack'
    | '/ThankYou'
    | '/ViewTransitions'
    | '/ViewTransitions2'
    | '/ViewTransitionsInReact'
    | '/Demos/1'
    | '/Demos/2'
    | '/Demos/3'
    | '/Demos'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/Hurdles'
    | '/Start'
    | '/TechStack'
    | '/ThankYou'
    | '/ViewTransitions'
    | '/ViewTransitions2'
    | '/ViewTransitionsInReact'
    | '/Demos/1'
    | '/Demos/2'
    | '/Demos/3'
    | '/Demos'
  id:
    | '__root__'
    | '/'
    | '/Hurdles'
    | '/Start'
    | '/TechStack'
    | '/ThankYou'
    | '/ViewTransitions'
    | '/ViewTransitions2'
    | '/ViewTransitionsInReact'
    | '/Demos/1'
    | '/Demos/2'
    | '/Demos/3'
    | '/Demos/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  HurdlesRoute: typeof HurdlesRoute
  StartRoute: typeof StartRoute
  TechStackRoute: typeof TechStackRoute
  ThankYouRoute: typeof ThankYouRoute
  ViewTransitionsRoute: typeof ViewTransitionsRoute
  ViewTransitions2Route: typeof ViewTransitions2Route
  ViewTransitionsInReactRoute: typeof ViewTransitionsInReactRoute
  Demos1Route: typeof Demos1Route
  Demos2Route: typeof Demos2Route
  Demos3Route: typeof Demos3Route
  DemosIndexRoute: typeof DemosIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  HurdlesRoute: HurdlesRoute,
  StartRoute: StartRoute,
  TechStackRoute: TechStackRoute,
  ThankYouRoute: ThankYouRoute,
  ViewTransitionsRoute: ViewTransitionsRoute,
  ViewTransitions2Route: ViewTransitions2Route,
  ViewTransitionsInReactRoute: ViewTransitionsInReactRoute,
  Demos1Route: Demos1Route,
  Demos2Route: Demos2Route,
  Demos3Route: Demos3Route,
  DemosIndexRoute: DemosIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/Hurdles",
        "/Start",
        "/TechStack",
        "/ThankYou",
        "/ViewTransitions",
        "/ViewTransitions2",
        "/ViewTransitionsInReact",
        "/Demos/1",
        "/Demos/2",
        "/Demos/3",
        "/Demos/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/Hurdles": {
      "filePath": "Hurdles.tsx"
    },
    "/Start": {
      "filePath": "Start.tsx"
    },
    "/TechStack": {
      "filePath": "TechStack.tsx"
    },
    "/ThankYou": {
      "filePath": "ThankYou.tsx"
    },
    "/ViewTransitions": {
      "filePath": "ViewTransitions.tsx"
    },
    "/ViewTransitions2": {
      "filePath": "ViewTransitions2.tsx"
    },
    "/ViewTransitionsInReact": {
      "filePath": "ViewTransitionsInReact.tsx"
    },
    "/Demos/1": {
      "filePath": "Demos/1.tsx"
    },
    "/Demos/2": {
      "filePath": "Demos/2.tsx"
    },
    "/Demos/3": {
      "filePath": "Demos/3.tsx"
    },
    "/Demos/": {
      "filePath": "Demos/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
